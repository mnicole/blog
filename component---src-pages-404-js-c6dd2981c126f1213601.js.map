{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","location","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","Layout","style","marginLeft","marginRight","padding","to","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","_ref2","site","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-c6dd2981c126f1213601.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = ({ location }) => (\n    <Layout location={location}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>Sorry, this page does not exist.</p>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Layout = ({ title, children }) => (\n    <div\n        style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '30px'\n        }}>\n        <h1>\n            <Link to={'/'}>{title}</Link>\n        </h1>\n        {children}\n    </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={({ site }) => {\n            const metaDescription =\n                description || site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(\n                            keywords.length > 0\n                                ? {\n                                      name: 'keywords',\n                                      content: keywords.join(', ')\n                                  }\n                                : []\n                        )\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}