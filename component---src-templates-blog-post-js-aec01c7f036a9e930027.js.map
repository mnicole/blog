{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_bio__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","BlogPostTemplate","_ref","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","_post$frontmatter","frontmatter","excerpt","date","tags","a","createElement","description","style","textTransform","fontSize","dangerouslySetInnerHTML","__html","html","length","map","tag","key","to","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","marginLeft","marginRight","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","_ref2","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","gatsby__WEBPACK_IMPORTED_MODULE_2__","_public_static_d_199957516_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-blog-post-js-aec01c7f036a9e930027.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n    const post = data.markdownRemark;\n    const siteTitle = data.site.siteMetadata.title;\n    const { previous, next } = pageContext;\n    const { title, excerpt, date, tags } = post.frontmatter;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title={title} description={excerpt} />\n            <h3>{title}</h3>\n            <p\n                style={{\n                    textTransform: 'uppercase',\n                    fontSize: '14px'\n                }}>\n                {date}\n            </p>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            <hr />\n\n            <p\n                style={{\n                    textTransform: 'uppercase',\n                    fontSize: '14px'\n                }}>\n                {tags &&\n                    tags.length &&\n                    tags.map((tag) => (\n                        <Fragment key={tag}>\n                            <Link to={`/tags/${tag}/`}>{tag}</Link>\n                        </Fragment>\n                    ))}\n            </p>\n\n            <Bio />\n\n            <ul\n                style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-between',\n                    listStyle: 'none',\n                    padding: 0\n                }}>\n                <li>\n                    {previous && (\n                        <Link to={previous.fields.slug} rel=\"prev\">\n                            ← {previous.frontmatter.title}\n                        </Link>\n                    )}\n                </li>\n                <li>\n                    {next && (\n                        <Link to={next.fields.slug} rel=\"next\">\n                            {next.frontmatter.title} →\n                        </Link>\n                    )}\n                </li>\n            </ul>\n        </Layout>\n    );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug($slug: String!) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                tags\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Layout = ({ title, children }) => (\n    <div\n        style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '30px'\n        }}>\n        <h1>\n            <Link to={'/'}>{title}</Link>\n        </h1>\n        {children}\n    </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={({ site }) => {\n            const metaDescription =\n                description || site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(\n                            keywords.length > 0\n                                ? {\n                                      name: 'keywords',\n                                      content: keywords.join(', ')\n                                  }\n                                : []\n                        )\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={(data) => (\n            <div\n                style={{\n                    display: 'flex'\n                }}>\n                <p>\n                    By{' '}\n                    <strong>{data.site.siteMetadata.author}</strong>\n                </p>\n            </div>\n        )}\n    />\n);\n\nconst bioQuery = graphql`\n    query BioQuery {\n        site {\n            siteMetadata {\n                author\n            }\n        }\n    }\n`;\n\nexport default Bio;\n"],"sourceRoot":""}