{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/tags.js"],"names":["Layout","title","children","style","marginLeft","marginRight","padding","to","Tags","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","tagHeader","map","node","frontmatter","path","key","pageQuery"],"mappings":"oHAAA,+CAkBeA,IAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,yBACIC,MAAO,CACHC,WAAY,OACZC,YAAa,OACbC,QAAS,SAEb,4BACI,kBAAC,OAAD,CAAMC,GAAI,KAAMN,IAEnBC,K,kCCdT,kGAsDeM,UAhDF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvBC,EAAQH,EAARG,IADsC,EAEhBF,EAAKG,kBAA3BC,EAFsC,EAEtCA,MAAOC,EAF+B,EAE/BA,WACTC,EAAYN,EAAKO,KAAKC,aAAajB,MAEnCkB,EAAeJ,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEEH,EAFF,IAIf,OACI,kBAAC,IAAD,CAAQD,SAAUA,EAAUV,MAAOe,GAC/B,4BAAKG,GACL,4BACKL,EAAMM,KAAI,YAAe,IAAD,IAAXC,KACmBC,YAArBC,EADa,EACbA,KAAMtB,EADO,EACPA,MACd,OACI,wBAAIuB,IAAKD,GACL,kBAAC,OAAD,CAAMhB,GAAIgB,GAAOtB,QAKjC,kBAAC,OAAD,CAAMM,GAAG,SAAT,cA4BL,IAAMkB,EAAS","file":"component---src-templates-tags-js-47f4f3c30a7de1bed081.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport \"./layout.css\"\n\nconst Layout = ({ title, children }) => (\n    <div\n        style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '30px'\n        }}>\n        <h1>\n            <Link to={'/'}>{title}</Link>\n        </h1>\n        {children}\n    </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\n\nconst Tags = ({ pageContext, data, location }) => {\n    const { tag } = pageContext;\n    const { edges, totalCount } = data.allMarkdownRemark;\n    const siteTitle = data.site.siteMetadata.title;\n\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? '' : 's'\n    } tagged with \"${tag}\"`;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <h3>{tagHeader}</h3>\n            <ul>\n                {edges.map(({ node }) => {\n                    const { path, title } = node.frontmatter;\n                    return (\n                        <li key={path}>\n                            <Link to={path}>{title}</Link>\n                        </li>\n                    );\n                })}\n            </ul>\n            <Link to=\"/tags\">All tags</Link>\n        </Layout>\n    );\n};\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            path: PropTypes.string.isRequired,\n                            title: PropTypes.string.isRequired\n                        })\n                    })\n                }).isRequired\n            )\n        })\n    })\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n        site {\n            siteMetadata {\n                title\n                author\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        path\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}