{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["bioQuery","Bio","query","render","data","style","display","site","siteMetadata","author","BlogIndex","location","siteTitle","title","posts","allMarkdownRemark","edges","keywords","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt","pageQuery"],"mappings":"8IAoBMA,EAAQ,YAUCC,IA3BH,kBACR,kBAAC,cAAD,CACIC,MAAOF,EACPG,OAAQ,SAACC,GAAD,OACJ,yBACIC,MAAO,CACHC,QAAS,SAEb,gCACO,IACH,gCAASF,EAAKG,KAAKC,aAAaC,WAThD,W,kCCJJ,0HAoCeC,UA7BG,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,KAAMO,EAAe,EAAfA,SACjBC,EAAYR,EAAKG,KAAKC,aAAaK,MACnCC,EAAQV,EAAKW,kBAAkBC,MAErC,OACI,kBAAC,IAAD,CAAQL,SAAUA,EAAUE,MAAOD,GAC/B,kBAAC,IAAD,CAAKC,MAAM,YAAYI,SAAU,CAAC,UAClC,kBAAC,IAAD,MACCH,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJN,EACFM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC1C,OACI,yBAAKC,IAAKJ,EAAKE,OAAOC,MAClB,4BACI,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,MAAOT,IAEjC,+BAAQM,EAAKC,YAAYK,MACzB,uBACIC,wBAAyB,CACrBC,OAAQR,EAAKS,iBAYtC,IAAMC,EAAS,c","file":"component---src-pages-index-js-2050485ef6da4c827c25.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst Bio = () => (\n    <StaticQuery\n        query={bioQuery}\n        render={(data) => (\n            <div\n                style={{\n                    display: 'flex'\n                }}>\n                <p>\n                    By{' '}\n                    <strong>{data.site.siteMetadata.author}</strong>\n                </p>\n            </div>\n        )}\n    />\n);\n\nconst bioQuery = graphql`\n    query BioQuery {\n        site {\n            siteMetadata {\n                author\n            }\n        }\n    }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst BlogIndex = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All posts\" keywords={['blog']} />\n            <Bio />\n            {posts.map(({ node }) => {\n                const title =\n                    node.frontmatter.title || node.fields.slug;\n                return (\n                    <div key={node.fields.slug}>\n                        <h3>\n                            <Link to={node.fields.slug}>{title}</Link>\n                        </h3>\n                        <small>{node.frontmatter.date}</small>\n                        <p\n                            dangerouslySetInnerHTML={{\n                                __html: node.excerpt\n                            }}\n                        />\n                    </div>\n                );\n            })}\n        </Layout>\n    );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}