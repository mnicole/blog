{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/pages/page.module.css"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","TagsPage","_ref","data","location","siteTitle","site","siteMetadata","title","tags","allMarkdownRemark","group","a","createElement","map","_ref2","fieldValue","totalCount","key","to","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","style","marginLeft","marginRight","padding","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","emphasize"],"mappings":"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","file":"component---src-pages-tags-js-12b235d6ec36f319055d.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport pageStyles from './page.module.css';\n\nconst TagsPage = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title;\n    const tags = data.allMarkdownRemark.group;\n\n    return (\n        <Layout location={location} title={siteTitle}>\n            <SEO title=\"All tags\" />\n            <h3>Tags</h3>\n            {tags.map(({ fieldValue, totalCount }) => (\n                <div key={fieldValue}>\n                    <Link to={`/tags/${fieldValue}/`}>\n                        {fieldValue} ({totalCount})\n                    </Link>\n                </div>\n            ))}\n        </Layout>\n    );\n};\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(limit: 2000) {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Layout = ({ title, children }) => (\n    <div\n        style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            padding: '30px'\n        }}>\n        <h1>\n            <Link to={'/'}>{title}</Link>\n        </h1>\n        {children}\n    </div>\n);\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst SEO = ({ description, lang, meta, keywords, title }) => (\n    <StaticQuery\n        query={detailsQuery}\n        render={({ site }) => {\n            const metaDescription =\n                description || site.siteMetadata.description;\n            return (\n                <Helmet\n                    htmlAttributes={{\n                        lang\n                    }}\n                    title={title}\n                    titleTemplate={`%s | ${site.siteMetadata.title}`}\n                    meta={[\n                        {\n                            name: 'description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:title',\n                            content: title\n                        },\n                        {\n                            property: 'og:description',\n                            content: metaDescription\n                        },\n                        {\n                            property: 'og:type',\n                            content: 'website'\n                        },\n                        {\n                            name: 'twitter:card',\n                            content: 'summary'\n                        },\n                        {\n                            name: 'twitter:creator',\n                            content: site.siteMetadata.author\n                        },\n                        {\n                            name: 'twitter:title',\n                            content: title\n                        },\n                        {\n                            name: 'twitter:description',\n                            content: metaDescription\n                        }\n                    ]\n                        .concat(\n                            keywords.length > 0\n                                ? {\n                                      name: 'keywords',\n                                      content: keywords.join(', ')\n                                  }\n                                : []\n                        )\n                        .concat(meta)}\n                />\n            );\n        }}\n    />\n);\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    keywords: []\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"page-module--title--1npzP\",\"emphasize\":\"page-module--emphasize--1BA4F\"};"],"sourceRoot":""}