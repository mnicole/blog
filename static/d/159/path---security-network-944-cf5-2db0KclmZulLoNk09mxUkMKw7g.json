{"data":{"site":{"siteMetadata":{"title":"Thoughts on Things","author":"Michele Larson"}},"markdownRemark":{"id":"7a0d6946-5d7e-503b-bed9-d19dadedeff0","excerpt":"Why do we need Network Security? Keeping dangerous data out Prevent exfiltration of data Protect hosts missing internal protection, like legacy or IoT Protect‚Ä¶","html":"<h4>Why do we need Network Security?</h4>\n<ul>\n<li>Keeping dangerous data out</li>\n<li>Prevent exfiltration of data</li>\n<li>Protect hosts missing internal protection, like legacy or IoT</li>\n<li>Protect against threats coming into the network (DDoS)</li>\n<li>Protect against threats on the network (worms, botnets, espionage)</li>\n</ul>\n<h4>Protection Strategies</h4>\n<ul>\n<li>Positive policy (whitelisting) - define what is allowed, don‚Äôt allow anything else</li>\n<li>Firewalls / security zones - sit between zones and filter traffic for the policy. Define what has access to each zone. Commonly used: Intranet, Internet, Extranet, Corporate, Testing Labs, Data Center.</li>\n<li>Defense in Depth - Isolate things so if you get a section breached, they only have access to that one thing.</li>\n<li>Intrusion Detection - Catches and blocks known threats</li>\n<li>Honeynets / Intrusion Deception - leave something open that we don‚Äôt care about, to see if it‚Äôs attacked</li>\n<li>Quarantine - Put you into your own network where you can‚Äôt touch anything else (ex - airport wireless logins)</li>\n<li>Reputation (also host based) - big data solution where there is a list of bad and good things that anyone can check (ex - IP addresses, URLs, files)</li>\n</ul>\n<h3>Network Threats</h3>\n<h4>Man in the Middle</h4>\n<ul>\n<li>network generates packets and needs to go through other networks. Someone can sit in the middle and change things before passing them along.</li>\n</ul>\n<h5>Examples</h5>\n<p>üôÅ ARP poisoning - can fool hosts into thinking the internet gateway is at your MAC address instead of the real one.</p>\n<p>üôÅ TCP hijacking - inject, delete or change data in a TCP stream.</p>\n<p>üôÇ Terminating TCP Proxy - terminate TCP connections on one side and create a new connection on other side or rewrite headers so an attacker can‚Äôt transmit protocol attacks.</p>\n<p>üôÇ HTTP Proxy - intercept all HTTP traffic and verify destination or check for strangely encoded URLs.</p>\n<p>üôÇ SSL MITM - Intercept SSL, decrypt and reencrpy  </p>\n<h5>Detecting Man in the Middle:</h5>\n<ul>\n<li>Attach HMAC (Machine Access Code, using a crypto hash) to data. You would need to crack the HMAC to change the data. Private/Public keys are used to hash the data.</li>\n<li>You can trick people with SSL MITM by spoofing DNS or forging/stealing keys and certificates. Also, because people might not know what the browser messages are telling them.</li>\n</ul>\n<h4>Reconnaissance</h4>\n<h5>Active</h5>\n<ul>\n<li>Scanning - trying to connect to many hosts and services to get the IP address and UDP/TCP port of a service you can attack.</li>\n<li>NMAP = common tool</li>\n<li>Kinds of simple scans - Ping, TCP port scan, UDP scans (UDP data packet/ICMP Dest Unreachable)</li>\n<li>Scan for vulnerabilities - try attacking ports one by one</li>\n</ul>\n<h5>Passive</h5>\n<ul>\n<li>This is generally illegal ‚ö†Ô∏è</li>\n<li>Attacker waits and listens (Tap ISP, hide equipment, listening to radio signals)</li>\n</ul>\n<h5>Defenses</h5>\n<ul>\n<li>Setting up honeynets</li>\n<li>Checking logs</li>\n</ul>\n<h4>Spoofing</h4>\n<ul>\n<li>Attacker pretends to be another network entity.</li>\n<li>Can be spoofed: TCP sequence numbers, IP addresses, MAC addresses, Email addresses, HTTP fields</li>\n</ul>\n<h4>Resource Consumption Attacks</h4>\n<h5>DoS</h5>\n<ul>\n<li>Denial of Service - consumes resources for an extended period of time so the target is unusable</li>\n<li>DDoS - distributed DoS - uses large number of computers to do the attack which makes it harder to defend against</li>\n<li>Types - Network exhaustion (flooding network so service is unreachable); CPU exhaustion; Memory exhaustion; Storage exhaustion; Application vulnerability exploitation (crashing the app or OS); Crashing other finite resources (Sockets/TCP listen queue/connection pool/firewall session tables)</li>\n<li>Methods - Botnets, DNS or NTP amplification</li>\n<li>Defenses - network traffic validation - check for spoofed addresses and validate application protocols; traffic scrubbing centers (such as cloudflare) - only lets legitimate traffic through</li>\n</ul>\n<h4>Bugs / Backdoors</h4>\n<ul>\n<li>Common bugs - built in/default passwords, protocol design bugs, buffer overflow</li>\n</ul>\n<h3>Network Defenses</h3>\n<ul>\n<li>Packet filtering - Setting up a policy, Whitelist traffic, Defends against segmentation, fragmentation attacks, malformed packets</li>\n<li>Deep Inspection - adds inspection of the data portion of the packet in addition to the network headers</li>\n<li>Proxying</li>\n<li>NAT (Network Address Translation) - temporarily maps a connection from a local private IP and port to a public IP address and port to be used on the public side of that communication</li>\n<li>VPN/IPSEC - Security layer allowing IP packets to be encrypted between two endpoints under a security association. </li>\n<li>NIPS (Network Intrusion Prevention System) - watches for patterns of traffic or application data that is malicious</li>\n<li>Software Defined Networks (SDN) - can reprogram switches remotely using OpenFlow, so if you find something suspicious, you can quickly send it to a quarantined space.</li>\n</ul>","frontmatter":{"title":"Thoughts on Network Security (Defense Against the Dark Arts)","date":"February 12, 2019","tags":["school","security"]}}},"pageContext":{"slug":"/security-network/","previous":{"fields":{"slug":"/security-final/"},"frontmatter":{"title":"Thoughts on Hacking Challenges (Final for Defense Against the Dark Arts)","tags":["school","security"]}},"next":null}}